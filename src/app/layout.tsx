import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google"; // Ensure these fonts are available in your project
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import "./globals.css";
import { Roboto } from "next/font/google";
import { ThemeProvider } from "@mui/material/styles";
import theme from "../theme/theme";
import { GlobalStyles } from "@mui/material";
import { globalStyles } from "@/styles/globalStyles";
import { ThemeContextProvider } from "@/theme/ThemeContextProvider";

// Fonts section
const roboto = Roboto({
  weight: ["300", "400", "500", "700"],
  subsets: ["latin"],
  display: "swap",
  variable: "--font-roboto",
});

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Metadata for Next.js
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// RootLayout Component
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${roboto.variable}`}
      >
        {/* Cache provider for MUI in Next.js App Router */}
        <AppRouterCacheProvider>
          {/* Theme context provider for dynamic theme handling */}
          <ThemeContextProvider>
            {/* MUI ThemeProvider for global theming */}
            <ThemeProvider theme={theme}>
              {/* Global CSS styles */}
              <GlobalStyles styles={globalStyles} />
              {/* Render children */}
              {children}
            </ThemeProvider>
          </ThemeContextProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
